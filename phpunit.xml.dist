<?xml version="1.0" encoding="UTF-8"?>

<!-- https://phpunit.readthedocs.io/en/latest/configuration.html -->
<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="bin/.phpunit/phpunit.xsd"
         backupGlobals="false"
         colors="true"
         bootstrap="tests/bootstrap.php"
>
    <php>
        <ini name="error_reporting" value="-1" />
        <server name="SHELL_VERBOSITY" value="-1" />
        <server name="SYMFONY_PHPUNIT_REMOVE" value="" />
        <server name="SYMFONY_PHPUNIT_VERSION" value="7.5" />
        <!-- define your env variables for the test env here -->
        <server name="OAUTH_CLIENT_ID" value="s$cretf0rt3st" />
        <server name="OAUTH_CLIENT_SECRET" value="s$cretf0rt3st" />

        <!-- ###+ symfony/framework-bundle ### -->
        <server name="APP_ENV" value="test" force="true" />
        <server name="APP_DEBUG" value="1" />
        <server name="APP_SECRET" value="s$cretf0rt3st" />
        <!-- env name="TRUSTED_PROXIES" value="127.0.0.1,127.0.0.2" -->
        <!-- env name="TRUSTED_HOSTS" value="localhost,example.com" -->
        <!-- ###- symfony/framework-bundle ### -->

        <!-- ###+ doctrine/doctrine-bundle ### -->
        <server name="DATABASE_URL" value="sqlite:///var/data/test.sqlite" />
        <!-- ###- doctrine/doctrine-bundle ### -->

        <!-- ###+ google/recaptcha ### -->
        <!-- To use Google Recaptcha, you must register a site on Recaptcha's admin panel: -->
        <!-- https://www.google.com/recaptcha/admin -->
        <server name="GOOGLE_RECAPTCHA_SITE_KEY" value="" />
        <server name="GOOGLE_RECAPTCHA_SECRET" value="" />
        <!-- ###- google/recaptcha ### -->
    </php>

    <testsuites>
        <testsuite name="Project Test Suite">
            <directory>tests</directory>
        </testsuite>
    </testsuites>

    <filter>
        <whitelist processUncoveredFilesFromWhitelist="true">
            <directory suffix=".php">src</directory>
        </whitelist>
    </filter>

    <listeners>
        <listener class="Symfony\Bridge\PhpUnit\SymfonyTestsListener" />
        <!-- it begins a database transaction before every test case and rolls it back after
             the test finished, so tests can manipulate the database without affecting other tests -->
        <listener class="\DAMA\DoctrineTestBundle\PHPUnit\PHPUnitListener" />
    </listeners>
</phpunit>
